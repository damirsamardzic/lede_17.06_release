--- a/backport-include/linux/phy.h
+++ b/backport-include/linux/phy.h
@@ -9,7 +9,7 @@
 	phy_connect(dev, bus_id, handler, 0, interface)
 #endif
 
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(4,5,0))
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(4,4,51))
 #define phydev_name LINUX_BACKPORT(phydev_name)
 static inline const char *phydev_name(const struct phy_device *phydev)
 {
@@ -56,13 +56,13 @@ static inline void backport_mdiobus_unre
 	mdiobus_unregister(bus);
 }
 #define mdiobus_unregister LINUX_BACKPORT(mdiobus_unregister)
-#endif /* < 4.5 */
+#endif /* < 4.4.51 */
 
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(4,5,0))
 #define phydev_get_addr LINUX_BACKPORT(phydev_get_addr)
 static inline int phydev_get_addr(struct phy_device *phydev)
 {
-	return phydev->addr;
+	return phydev->mdio.addr;
 }
 #else
 #define phydev_get_addr LINUX_BACKPORT(phydev_get_addr)
--- a/compat/backport-4.5.c
+++ b/compat/backport-4.5.c
@@ -107,13 +107,13 @@ EXPORT_SYMBOL_GPL(phy_attached_info);
 void phy_attached_print(struct phy_device *phydev, const char *fmt, ...)
 {
 	if (!fmt) {
-		dev_info(&phydev->dev, ATTACHED_FMT "\n",
+		dev_info(&phydev->mdio.dev, ATTACHED_FMT "\n",
 			 phydev->drv->name, phydev_name(phydev),
 			 phydev->irq);
 	} else {
 		va_list ap;
 
-		dev_info(&phydev->dev, ATTACHED_FMT,
+		dev_info(&phydev->mdio.dev, ATTACHED_FMT,
 			 phydev->drv->name, phydev_name(phydev),
 			 phydev->irq);
 
